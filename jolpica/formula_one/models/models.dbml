Project "jolpica-f1" {
  database_type: 'PostgreSQL'
  Note: '''jolpica-f1 Database Structure'''
}

enum formula_one.char_session_type {
  "R" [note: '''Race''']
  "Q1" [note: '''Qualifying One''']
  "Q2" [note: '''Qualifying Two''']
  "Q3" [note: '''Qualifying Three''']
  "QA" [note: '''Qualifying Avg''']
  "QO" [note: '''Qualifying Order''']
  "QB" [note: '''Qualifying Best''']
  "FP1" [note: '''Practice One''']
  "FP2" [note: '''Practice Two''']
  "FP3" [note: '''Practice Three''']
  "PQ" [note: '''Prequalifying''']
  "SR" [note: '''Sprint Race''']
  "SQ1" [note: '''Sprint Qualifying One''']
  "SQ2" [note: '''Sprint Qualifying Two''']
  "SQ3" [note: '''Sprint Qualifying Three''']
}

enum formula_one.positive_small_integer_championshipadjustment_adjustment {
  "0" [note: '''None''']
  "1" [note: '''Point Deduction''']
  "101" [note: '''Disqualified''']
  "102" [note: '''Excluded''']
}

enum formula_one.positive_small_integer_championshipsystem_driver_season_split {
  "0" [note: '''Season is not split''']
  "2" [note: '''Split in halves (remainder in first half)''']
  "3" [note: '''Split in halves (remainder in second half)''']
}

enum formula_one.positive_small_integer_championshipsystem_eligibility {
  "1" [note: '''Entry must score at least 1 championship point''']
  "2" [note: '''Entry must have a classified finish in at least 1 round''']
}

enum formula_one.positive_small_integer_championshipsystem_team_points_per_session {
  "0" [note: '''All points are summed''']
  "1" [note: '''Single highest points selected''']
}

enum formula_one.positive_small_integer_championshipsystem_team_season_split {
  "0" [note: '''Season is not split''']
  "2" [note: '''Split in halves (remainder in first half)''']
  "3" [note: '''Split in halves (remainder in second half)''']
}

enum formula_one.positive_small_integer_driverchampionship_adjustment_type {
  "0" [note: '''None''']
  "1" [note: '''Point Deduction''']
  "101" [note: '''Disqualified''']
  "102" [note: '''Excluded''']
}

enum formula_one.positive_small_integer_pointsystem_driver_fastest_lap {
  "0" [note: '''No Fastest Lap Point''']
  "1" [note: '''Point for Fastest Lap''']
  "2" [note: '''Point divided between all who got fastest lap''']
  "3" [note: '''Point if in top 10''']
  "4" [note: '''Point if top 10, and >50% race distance''']
}

enum formula_one.positive_small_integer_pointsystem_driver_position_points {
  "0" [note: '''No Points Awarded''']
  "1" [note: '''1950 - Top 5 get upto 8 points''']
  "2" [note: '''1960 - Top 6 get upto 8 points''']
  "3" [note: '''1961 - Top 6 get upto 9 points''']
  "5" [note: '''1991 - Top 6 get upto 10 points''']
  "6" [note: '''2003 - Top 8 get upto 10 points''']
  "7" [note: '''2010 - Top 10 get upto 25 points''']
  "21" [note: '''Sprint 2021 - Top 3 get upto 3 points''']
  "22" [note: '''Sprint 2022 - Top 8 get upto 8 points''']
}

enum formula_one.positive_small_integer_pointsystem_partial {
  "0" [note: '''No Partial Points''']
  "1" [note: '''Half Points between 30% - 60%''']
  "2" [note: '''Half Points between 2 Laps - 75%''']
  "3" [note: '''Red Flag Finish, 1-4 Quarters (rounded) of points, minimum 2 laps.''']
  "4" [note: '''1-4 Quarters (rounded) of points, minimum 2 laps''']
}

enum formula_one.positive_small_integer_pointsystem_shared_drive {
  "0" [note: '''No Points''']
  "1" [note: '''Points Shared Equally''']
  "2" [note: '''Shared Points of all drives, unless insufficent distance''']
  "3" [note: '''Shared Points of highest finish''']
}

enum formula_one.positive_small_integer_pointsystem_team_fastest_lap {
  "0" [note: '''No Fastest Lap Point''']
  "1" [note: '''Point for Fastest Lap''']
  "2" [note: '''Point divided between all who got fastest lap''']
  "3" [note: '''Point if in top 10''']
  "4" [note: '''Point if top 10, and >50% race distance''']
}

enum formula_one.positive_small_integer_pointsystem_team_position_points {
  "0" [note: '''No Points Awarded''']
  "1" [note: '''1950 - Top 5 get upto 8 points''']
  "2" [note: '''1960 - Top 6 get upto 8 points''']
  "3" [note: '''1961 - Top 6 get upto 9 points''']
  "5" [note: '''1991 - Top 6 get upto 10 points''']
  "6" [note: '''2003 - Top 8 get upto 10 points''']
  "7" [note: '''2010 - Top 10 get upto 25 points''']
  "21" [note: '''Sprint 2021 - Top 3 get upto 3 points''']
  "22" [note: '''Sprint 2022 - Top 8 get upto 8 points''']
}

enum formula_one.positive_small_integer_sessionentry_status {
  "0" [note: '''Finished''']
  "1" [note: '''Car Finished Lap(s) behind Leader''']
  "10" [note: '''Accident, Collision or Driver Error on Track''']
  "11" [note: '''Mechanial, Safety or Other Retirement''']
  "20" [note: '''Disqualified''']
  "30" [note: '''Withdrawn or Did Not Start''']
  "40" [note: '''Did Not Qualify''']
  "41" [note: '''Did Not Prequalify''']
}

enum formula_one.positive_small_integer_teamchampionship_adjustment_type {
  "0" [note: '''None''']
  "1" [note: '''Point Deduction''']
  "101" [note: '''Disqualified''']
  "102" [note: '''Excluded''']
}

enum formula_one.positive_small_integer_teamdriver_role {
  "0" [note: '''Permanent''']
  "1" [note: '''Reserve''']
  "2" [note: '''Junior''']
}

enum formula_one.small_integer_championshipsystem_driver_best_results {
  "-2" [note: '''One less than total rounds per split''']
  "-1" [note: '''All rounds are counted''']
  "0" [note: '''No rounds are counted''']
  "4" [note: '''Four''']
  "5" [note: '''Five''']
  "6" [note: '''Six''']
  "7" [note: '''Seven''']
  "8" [note: '''Eight''']
  "11" [note: '''Eleven''']
}

enum formula_one.small_integer_championshipsystem_team_best_results {
  "-2" [note: '''One less than total rounds per split''']
  "-1" [note: '''All rounds are counted''']
  "0" [note: '''No rounds are counted''']
  "4" [note: '''Four''']
  "5" [note: '''Five''']
  "6" [note: '''Six''']
  "7" [note: '''Seven''']
  "8" [note: '''Eight''']
  "11" [note: '''Eleven''']
}

enum formula_one.time_zone_session_timezone {
  "Africa/Abidjan" [note: '''Africa/Abidjan''']
  "Africa/Accra" [note: '''Africa/Accra''']
  "Africa/Addis_Ababa" [note: '''Africa/Addis Ababa''']
  "Africa/Algiers" [note: '''Africa/Algiers''']
  "Africa/Asmara" [note: '''Africa/Asmara''']
  "Africa/Asmera" [note: '''Africa/Asmera''']
  "Africa/Bamako" [note: '''Africa/Bamako''']
  "Africa/Bangui" [note: '''Africa/Bangui''']
  "Africa/Banjul" [note: '''Africa/Banjul''']
  "Africa/Bissau" [note: '''Africa/Bissau''']
  "Africa/Blantyre" [note: '''Africa/Blantyre''']
  "Africa/Brazzaville" [note: '''Africa/Brazzaville''']
  "Africa/Bujumbura" [note: '''Africa/Bujumbura''']
  "Africa/Cairo" [note: '''Africa/Cairo''']
  "Africa/Casablanca" [note: '''Africa/Casablanca''']
  "Africa/Ceuta" [note: '''Africa/Ceuta''']
  "Africa/Conakry" [note: '''Africa/Conakry''']
  "Africa/Dakar" [note: '''Africa/Dakar''']
  "Africa/Dar_es_Salaam" [note: '''Africa/Dar es Salaam''']
  "Africa/Djibouti" [note: '''Africa/Djibouti''']
  "Africa/Douala" [note: '''Africa/Douala''']
  "Africa/El_Aaiun" [note: '''Africa/El Aaiun''']
  "Africa/Freetown" [note: '''Africa/Freetown''']
  "Africa/Gaborone" [note: '''Africa/Gaborone''']
  "Africa/Harare" [note: '''Africa/Harare''']
  "Africa/Johannesburg" [note: '''Africa/Johannesburg''']
  "Africa/Juba" [note: '''Africa/Juba''']
  "Africa/Kampala" [note: '''Africa/Kampala''']
  "Africa/Khartoum" [note: '''Africa/Khartoum''']
  "Africa/Kigali" [note: '''Africa/Kigali''']
  "Africa/Kinshasa" [note: '''Africa/Kinshasa''']
  "Africa/Lagos" [note: '''Africa/Lagos''']
  "Africa/Libreville" [note: '''Africa/Libreville''']
  "Africa/Lome" [note: '''Africa/Lome''']
  "Africa/Luanda" [note: '''Africa/Luanda''']
  "Africa/Lubumbashi" [note: '''Africa/Lubumbashi''']
  "Africa/Lusaka" [note: '''Africa/Lusaka''']
  "Africa/Malabo" [note: '''Africa/Malabo''']
  "Africa/Maputo" [note: '''Africa/Maputo''']
  "Africa/Maseru" [note: '''Africa/Maseru''']
  "Africa/Mbabane" [note: '''Africa/Mbabane''']
  "Africa/Mogadishu" [note: '''Africa/Mogadishu''']
  "Africa/Monrovia" [note: '''Africa/Monrovia''']
  "Africa/Nairobi" [note: '''Africa/Nairobi''']
  "Africa/Ndjamena" [note: '''Africa/Ndjamena''']
  "Africa/Niamey" [note: '''Africa/Niamey''']
  "Africa/Nouakchott" [note: '''Africa/Nouakchott''']
  "Africa/Ouagadougou" [note: '''Africa/Ouagadougou''']
  "Africa/Porto-Novo" [note: '''Africa/Porto-Novo''']
  "Africa/Sao_Tome" [note: '''Africa/Sao Tome''']
  "Africa/Timbuktu" [note: '''Africa/Timbuktu''']
  "Africa/Tripoli" [note: '''Africa/Tripoli''']
  "Africa/Tunis" [note: '''Africa/Tunis''']
  "Africa/Windhoek" [note: '''Africa/Windhoek''']
  "America/Adak" [note: '''America/Adak''']
  "America/Anchorage" [note: '''America/Anchorage''']
  "America/Anguilla" [note: '''America/Anguilla''']
  "America/Antigua" [note: '''America/Antigua''']
  "America/Araguaina" [note: '''America/Araguaina''']
  "America/Argentina/Buenos_Aires" [note: '''America/Argentina/Buenos Aires''']
  "America/Argentina/Catamarca" [note: '''America/Argentina/Catamarca''']
  "America/Argentina/ComodRivadavia" [note: '''America/Argentina/ComodRivadavia''']
  "America/Argentina/Cordoba" [note: '''America/Argentina/Cordoba''']
  "America/Argentina/Jujuy" [note: '''America/Argentina/Jujuy''']
  "America/Argentina/La_Rioja" [note: '''America/Argentina/La Rioja''']
  "America/Argentina/Mendoza" [note: '''America/Argentina/Mendoza''']
  "America/Argentina/Rio_Gallegos" [note: '''America/Argentina/Rio Gallegos''']
  "America/Argentina/Salta" [note: '''America/Argentina/Salta''']
  "America/Argentina/San_Juan" [note: '''America/Argentina/San Juan''']
  "America/Argentina/San_Luis" [note: '''America/Argentina/San Luis''']
  "America/Argentina/Tucuman" [note: '''America/Argentina/Tucuman''']
  "America/Argentina/Ushuaia" [note: '''America/Argentina/Ushuaia''']
  "America/Aruba" [note: '''America/Aruba''']
  "America/Asuncion" [note: '''America/Asuncion''']
  "America/Atikokan" [note: '''America/Atikokan''']
  "America/Atka" [note: '''America/Atka''']
  "America/Bahia" [note: '''America/Bahia''']
  "America/Bahia_Banderas" [note: '''America/Bahia Banderas''']
  "America/Barbados" [note: '''America/Barbados''']
  "America/Belem" [note: '''America/Belem''']
  "America/Belize" [note: '''America/Belize''']
  "America/Blanc-Sablon" [note: '''America/Blanc-Sablon''']
  "America/Boa_Vista" [note: '''America/Boa Vista''']
  "America/Bogota" [note: '''America/Bogota''']
  "America/Boise" [note: '''America/Boise''']
  "America/Buenos_Aires" [note: '''America/Buenos Aires''']
  "America/Cambridge_Bay" [note: '''America/Cambridge Bay''']
  "America/Campo_Grande" [note: '''America/Campo Grande''']
  "America/Cancun" [note: '''America/Cancun''']
  "America/Caracas" [note: '''America/Caracas''']
  "America/Catamarca" [note: '''America/Catamarca''']
  "America/Cayenne" [note: '''America/Cayenne''']
  "America/Cayman" [note: '''America/Cayman''']
  "America/Chicago" [note: '''America/Chicago''']
  "America/Chihuahua" [note: '''America/Chihuahua''']
  "America/Ciudad_Juarez" [note: '''America/Ciudad Juarez''']
  "America/Coral_Harbour" [note: '''America/Coral Harbour''']
  "America/Cordoba" [note: '''America/Cordoba''']
  "America/Costa_Rica" [note: '''America/Costa Rica''']
  "America/Coyhaique" [note: '''America/Coyhaique''']
  "America/Creston" [note: '''America/Creston''']
  "America/Cuiaba" [note: '''America/Cuiaba''']
  "America/Curacao" [note: '''America/Curacao''']
  "America/Danmarkshavn" [note: '''America/Danmarkshavn''']
  "America/Dawson" [note: '''America/Dawson''']
  "America/Dawson_Creek" [note: '''America/Dawson Creek''']
  "America/Denver" [note: '''America/Denver''']
  "America/Detroit" [note: '''America/Detroit''']
  "America/Dominica" [note: '''America/Dominica''']
  "America/Edmonton" [note: '''America/Edmonton''']
  "America/Eirunepe" [note: '''America/Eirunepe''']
  "America/El_Salvador" [note: '''America/El Salvador''']
  "America/Ensenada" [note: '''America/Ensenada''']
  "America/Fort_Nelson" [note: '''America/Fort Nelson''']
  "America/Fort_Wayne" [note: '''America/Fort Wayne''']
  "America/Fortaleza" [note: '''America/Fortaleza''']
  "America/Glace_Bay" [note: '''America/Glace Bay''']
  "America/Godthab" [note: '''America/Godthab''']
  "America/Goose_Bay" [note: '''America/Goose Bay''']
  "America/Grand_Turk" [note: '''America/Grand Turk''']
  "America/Grenada" [note: '''America/Grenada''']
  "America/Guadeloupe" [note: '''America/Guadeloupe''']
  "America/Guatemala" [note: '''America/Guatemala''']
  "America/Guayaquil" [note: '''America/Guayaquil''']
  "America/Guyana" [note: '''America/Guyana''']
  "America/Halifax" [note: '''America/Halifax''']
  "America/Havana" [note: '''America/Havana''']
  "America/Hermosillo" [note: '''America/Hermosillo''']
  "America/Indiana/Indianapolis" [note: '''America/Indiana/Indianapolis''']
  "America/Indiana/Knox" [note: '''America/Indiana/Knox''']
  "America/Indiana/Marengo" [note: '''America/Indiana/Marengo''']
  "America/Indiana/Petersburg" [note: '''America/Indiana/Petersburg''']
  "America/Indiana/Tell_City" [note: '''America/Indiana/Tell City''']
  "America/Indiana/Vevay" [note: '''America/Indiana/Vevay''']
  "America/Indiana/Vincennes" [note: '''America/Indiana/Vincennes''']
  "America/Indiana/Winamac" [note: '''America/Indiana/Winamac''']
  "America/Indianapolis" [note: '''America/Indianapolis''']
  "America/Inuvik" [note: '''America/Inuvik''']
  "America/Iqaluit" [note: '''America/Iqaluit''']
  "America/Jamaica" [note: '''America/Jamaica''']
  "America/Jujuy" [note: '''America/Jujuy''']
  "America/Juneau" [note: '''America/Juneau''']
  "America/Kentucky/Louisville" [note: '''America/Kentucky/Louisville''']
  "America/Kentucky/Monticello" [note: '''America/Kentucky/Monticello''']
  "America/Knox_IN" [note: '''America/Knox IN''']
  "America/Kralendijk" [note: '''America/Kralendijk''']
  "America/La_Paz" [note: '''America/La Paz''']
  "America/Lima" [note: '''America/Lima''']
  "America/Los_Angeles" [note: '''America/Los Angeles''']
  "America/Louisville" [note: '''America/Louisville''']
  "America/Lower_Princes" [note: '''America/Lower Princes''']
  "America/Maceio" [note: '''America/Maceio''']
  "America/Managua" [note: '''America/Managua''']
  "America/Manaus" [note: '''America/Manaus''']
  "America/Marigot" [note: '''America/Marigot''']
  "America/Martinique" [note: '''America/Martinique''']
  "America/Matamoros" [note: '''America/Matamoros''']
  "America/Mazatlan" [note: '''America/Mazatlan''']
  "America/Mendoza" [note: '''America/Mendoza''']
  "America/Menominee" [note: '''America/Menominee''']
  "America/Merida" [note: '''America/Merida''']
  "America/Metlakatla" [note: '''America/Metlakatla''']
  "America/Mexico_City" [note: '''America/Mexico City''']
  "America/Miquelon" [note: '''America/Miquelon''']
  "America/Moncton" [note: '''America/Moncton''']
  "America/Monterrey" [note: '''America/Monterrey''']
  "America/Montevideo" [note: '''America/Montevideo''']
  "America/Montreal" [note: '''America/Montreal''']
  "America/Montserrat" [note: '''America/Montserrat''']
  "America/Nassau" [note: '''America/Nassau''']
  "America/New_York" [note: '''America/New York''']
  "America/Nipigon" [note: '''America/Nipigon''']
  "America/Nome" [note: '''America/Nome''']
  "America/Noronha" [note: '''America/Noronha''']
  "America/North_Dakota/Beulah" [note: '''America/North Dakota/Beulah''']
  "America/North_Dakota/Center" [note: '''America/North Dakota/Center''']
  "America/North_Dakota/New_Salem" [note: '''America/North Dakota/New Salem''']
  "America/Nuuk" [note: '''America/Nuuk''']
  "America/Ojinaga" [note: '''America/Ojinaga''']
  "America/Panama" [note: '''America/Panama''']
  "America/Pangnirtung" [note: '''America/Pangnirtung''']
  "America/Paramaribo" [note: '''America/Paramaribo''']
  "America/Phoenix" [note: '''America/Phoenix''']
  "America/Port-au-Prince" [note: '''America/Port-au-Prince''']
  "America/Port_of_Spain" [note: '''America/Port of Spain''']
  "America/Porto_Acre" [note: '''America/Porto Acre''']
  "America/Porto_Velho" [note: '''America/Porto Velho''']
  "America/Puerto_Rico" [note: '''America/Puerto Rico''']
  "America/Punta_Arenas" [note: '''America/Punta Arenas''']
  "America/Rainy_River" [note: '''America/Rainy River''']
  "America/Rankin_Inlet" [note: '''America/Rankin Inlet''']
  "America/Recife" [note: '''America/Recife''']
  "America/Regina" [note: '''America/Regina''']
  "America/Resolute" [note: '''America/Resolute''']
  "America/Rio_Branco" [note: '''America/Rio Branco''']
  "America/Rosario" [note: '''America/Rosario''']
  "America/Santa_Isabel" [note: '''America/Santa Isabel''']
  "America/Santarem" [note: '''America/Santarem''']
  "America/Santiago" [note: '''America/Santiago''']
  "America/Santo_Domingo" [note: '''America/Santo Domingo''']
  "America/Sao_Paulo" [note: '''America/Sao Paulo''']
  "America/Scoresbysund" [note: '''America/Scoresbysund''']
  "America/Shiprock" [note: '''America/Shiprock''']
  "America/Sitka" [note: '''America/Sitka''']
  "America/St_Barthelemy" [note: '''America/St Barthelemy''']
  "America/St_Johns" [note: '''America/St Johns''']
  "America/St_Kitts" [note: '''America/St Kitts''']
  "America/St_Lucia" [note: '''America/St Lucia''']
  "America/St_Thomas" [note: '''America/St Thomas''']
  "America/St_Vincent" [note: '''America/St Vincent''']
  "America/Swift_Current" [note: '''America/Swift Current''']
  "America/Tegucigalpa" [note: '''America/Tegucigalpa''']
  "America/Thule" [note: '''America/Thule''']
  "America/Thunder_Bay" [note: '''America/Thunder Bay''']
  "America/Tijuana" [note: '''America/Tijuana''']
  "America/Toronto" [note: '''America/Toronto''']
  "America/Tortola" [note: '''America/Tortola''']
  "America/Vancouver" [note: '''America/Vancouver''']
  "America/Virgin" [note: '''America/Virgin''']
  "America/Whitehorse" [note: '''America/Whitehorse''']
  "America/Winnipeg" [note: '''America/Winnipeg''']
  "America/Yakutat" [note: '''America/Yakutat''']
  "America/Yellowknife" [note: '''America/Yellowknife''']
  "Antarctica/Casey" [note: '''Antarctica/Casey''']
  "Antarctica/Davis" [note: '''Antarctica/Davis''']
  "Antarctica/DumontDUrville" [note: '''Antarctica/DumontDUrville''']
  "Antarctica/Macquarie" [note: '''Antarctica/Macquarie''']
  "Antarctica/Mawson" [note: '''Antarctica/Mawson''']
  "Antarctica/McMurdo" [note: '''Antarctica/McMurdo''']
  "Antarctica/Palmer" [note: '''Antarctica/Palmer''']
  "Antarctica/Rothera" [note: '''Antarctica/Rothera''']
  "Antarctica/South_Pole" [note: '''Antarctica/South Pole''']
  "Antarctica/Syowa" [note: '''Antarctica/Syowa''']
  "Antarctica/Troll" [note: '''Antarctica/Troll''']
  "Antarctica/Vostok" [note: '''Antarctica/Vostok''']
  "Arctic/Longyearbyen" [note: '''Arctic/Longyearbyen''']
  "Asia/Aden" [note: '''Asia/Aden''']
  "Asia/Almaty" [note: '''Asia/Almaty''']
  "Asia/Amman" [note: '''Asia/Amman''']
  "Asia/Anadyr" [note: '''Asia/Anadyr''']
  "Asia/Aqtau" [note: '''Asia/Aqtau''']
  "Asia/Aqtobe" [note: '''Asia/Aqtobe''']
  "Asia/Ashgabat" [note: '''Asia/Ashgabat''']
  "Asia/Ashkhabad" [note: '''Asia/Ashkhabad''']
  "Asia/Atyrau" [note: '''Asia/Atyrau''']
  "Asia/Baghdad" [note: '''Asia/Baghdad''']
  "Asia/Bahrain" [note: '''Asia/Bahrain''']
  "Asia/Baku" [note: '''Asia/Baku''']
  "Asia/Bangkok" [note: '''Asia/Bangkok''']
  "Asia/Barnaul" [note: '''Asia/Barnaul''']
  "Asia/Beirut" [note: '''Asia/Beirut''']
  "Asia/Bishkek" [note: '''Asia/Bishkek''']
  "Asia/Brunei" [note: '''Asia/Brunei''']
  "Asia/Calcutta" [note: '''Asia/Calcutta''']
  "Asia/Chita" [note: '''Asia/Chita''']
  "Asia/Choibalsan" [note: '''Asia/Choibalsan''']
  "Asia/Chongqing" [note: '''Asia/Chongqing''']
  "Asia/Chungking" [note: '''Asia/Chungking''']
  "Asia/Colombo" [note: '''Asia/Colombo''']
  "Asia/Dacca" [note: '''Asia/Dacca''']
  "Asia/Damascus" [note: '''Asia/Damascus''']
  "Asia/Dhaka" [note: '''Asia/Dhaka''']
  "Asia/Dili" [note: '''Asia/Dili''']
  "Asia/Dubai" [note: '''Asia/Dubai''']
  "Asia/Dushanbe" [note: '''Asia/Dushanbe''']
  "Asia/Famagusta" [note: '''Asia/Famagusta''']
  "Asia/Gaza" [note: '''Asia/Gaza''']
  "Asia/Harbin" [note: '''Asia/Harbin''']
  "Asia/Hebron" [note: '''Asia/Hebron''']
  "Asia/Ho_Chi_Minh" [note: '''Asia/Ho Chi Minh''']
  "Asia/Hong_Kong" [note: '''Asia/Hong Kong''']
  "Asia/Hovd" [note: '''Asia/Hovd''']
  "Asia/Irkutsk" [note: '''Asia/Irkutsk''']
  "Asia/Istanbul" [note: '''Asia/Istanbul''']
  "Asia/Jakarta" [note: '''Asia/Jakarta''']
  "Asia/Jayapura" [note: '''Asia/Jayapura''']
  "Asia/Jerusalem" [note: '''Asia/Jerusalem''']
  "Asia/Kabul" [note: '''Asia/Kabul''']
  "Asia/Kamchatka" [note: '''Asia/Kamchatka''']
  "Asia/Karachi" [note: '''Asia/Karachi''']
  "Asia/Kashgar" [note: '''Asia/Kashgar''']
  "Asia/Kathmandu" [note: '''Asia/Kathmandu''']
  "Asia/Katmandu" [note: '''Asia/Katmandu''']
  "Asia/Khandyga" [note: '''Asia/Khandyga''']
  "Asia/Kolkata" [note: '''Asia/Kolkata''']
  "Asia/Krasnoyarsk" [note: '''Asia/Krasnoyarsk''']
  "Asia/Kuala_Lumpur" [note: '''Asia/Kuala Lumpur''']
  "Asia/Kuching" [note: '''Asia/Kuching''']
  "Asia/Kuwait" [note: '''Asia/Kuwait''']
  "Asia/Macao" [note: '''Asia/Macao''']
  "Asia/Macau" [note: '''Asia/Macau''']
  "Asia/Magadan" [note: '''Asia/Magadan''']
  "Asia/Makassar" [note: '''Asia/Makassar''']
  "Asia/Manila" [note: '''Asia/Manila''']
  "Asia/Muscat" [note: '''Asia/Muscat''']
  "Asia/Nicosia" [note: '''Asia/Nicosia''']
  "Asia/Novokuznetsk" [note: '''Asia/Novokuznetsk''']
  "Asia/Novosibirsk" [note: '''Asia/Novosibirsk''']
  "Asia/Omsk" [note: '''Asia/Omsk''']
  "Asia/Oral" [note: '''Asia/Oral''']
  "Asia/Phnom_Penh" [note: '''Asia/Phnom Penh''']
  "Asia/Pontianak" [note: '''Asia/Pontianak''']
  "Asia/Pyongyang" [note: '''Asia/Pyongyang''']
  "Asia/Qatar" [note: '''Asia/Qatar''']
  "Asia/Qostanay" [note: '''Asia/Qostanay''']
  "Asia/Qyzylorda" [note: '''Asia/Qyzylorda''']
  "Asia/Rangoon" [note: '''Asia/Rangoon''']
  "Asia/Riyadh" [note: '''Asia/Riyadh''']
  "Asia/Saigon" [note: '''Asia/Saigon''']
  "Asia/Sakhalin" [note: '''Asia/Sakhalin''']
  "Asia/Samarkand" [note: '''Asia/Samarkand''']
  "Asia/Seoul" [note: '''Asia/Seoul''']
  "Asia/Shanghai" [note: '''Asia/Shanghai''']
  "Asia/Singapore" [note: '''Asia/Singapore''']
  "Asia/Srednekolymsk" [note: '''Asia/Srednekolymsk''']
  "Asia/Taipei" [note: '''Asia/Taipei''']
  "Asia/Tashkent" [note: '''Asia/Tashkent''']
  "Asia/Tbilisi" [note: '''Asia/Tbilisi''']
  "Asia/Tehran" [note: '''Asia/Tehran''']
  "Asia/Tel_Aviv" [note: '''Asia/Tel Aviv''']
  "Asia/Thimbu" [note: '''Asia/Thimbu''']
  "Asia/Thimphu" [note: '''Asia/Thimphu''']
  "Asia/Tokyo" [note: '''Asia/Tokyo''']
  "Asia/Tomsk" [note: '''Asia/Tomsk''']
  "Asia/Ujung_Pandang" [note: '''Asia/Ujung Pandang''']
  "Asia/Ulaanbaatar" [note: '''Asia/Ulaanbaatar''']
  "Asia/Ulan_Bator" [note: '''Asia/Ulan Bator''']
  "Asia/Urumqi" [note: '''Asia/Urumqi''']
  "Asia/Ust-Nera" [note: '''Asia/Ust-Nera''']
  "Asia/Vientiane" [note: '''Asia/Vientiane''']
  "Asia/Vladivostok" [note: '''Asia/Vladivostok''']
  "Asia/Yakutsk" [note: '''Asia/Yakutsk''']
  "Asia/Yangon" [note: '''Asia/Yangon''']
  "Asia/Yekaterinburg" [note: '''Asia/Yekaterinburg''']
  "Asia/Yerevan" [note: '''Asia/Yerevan''']
  "Atlantic/Azores" [note: '''Atlantic/Azores''']
  "Atlantic/Bermuda" [note: '''Atlantic/Bermuda''']
  "Atlantic/Canary" [note: '''Atlantic/Canary''']
  "Atlantic/Cape_Verde" [note: '''Atlantic/Cape Verde''']
  "Atlantic/Faeroe" [note: '''Atlantic/Faeroe''']
  "Atlantic/Faroe" [note: '''Atlantic/Faroe''']
  "Atlantic/Jan_Mayen" [note: '''Atlantic/Jan Mayen''']
  "Atlantic/Madeira" [note: '''Atlantic/Madeira''']
  "Atlantic/Reykjavik" [note: '''Atlantic/Reykjavik''']
  "Atlantic/South_Georgia" [note: '''Atlantic/South Georgia''']
  "Atlantic/St_Helena" [note: '''Atlantic/St Helena''']
  "Atlantic/Stanley" [note: '''Atlantic/Stanley''']
  "Australia/ACT" [note: '''Australia/ACT''']
  "Australia/Adelaide" [note: '''Australia/Adelaide''']
  "Australia/Brisbane" [note: '''Australia/Brisbane''']
  "Australia/Broken_Hill" [note: '''Australia/Broken Hill''']
  "Australia/Canberra" [note: '''Australia/Canberra''']
  "Australia/Currie" [note: '''Australia/Currie''']
  "Australia/Darwin" [note: '''Australia/Darwin''']
  "Australia/Eucla" [note: '''Australia/Eucla''']
  "Australia/Hobart" [note: '''Australia/Hobart''']
  "Australia/LHI" [note: '''Australia/LHI''']
  "Australia/Lindeman" [note: '''Australia/Lindeman''']
  "Australia/Lord_Howe" [note: '''Australia/Lord Howe''']
  "Australia/Melbourne" [note: '''Australia/Melbourne''']
  "Australia/NSW" [note: '''Australia/NSW''']
  "Australia/North" [note: '''Australia/North''']
  "Australia/Perth" [note: '''Australia/Perth''']
  "Australia/Queensland" [note: '''Australia/Queensland''']
  "Australia/South" [note: '''Australia/South''']
  "Australia/Sydney" [note: '''Australia/Sydney''']
  "Australia/Tasmania" [note: '''Australia/Tasmania''']
  "Australia/Victoria" [note: '''Australia/Victoria''']
  "Australia/West" [note: '''Australia/West''']
  "Australia/Yancowinna" [note: '''Australia/Yancowinna''']
  "Brazil/Acre" [note: '''Brazil/Acre''']
  "Brazil/DeNoronha" [note: '''Brazil/DeNoronha''']
  "Brazil/East" [note: '''Brazil/East''']
  "Brazil/West" [note: '''Brazil/West''']
  "CET" [note: '''CET''']
  "CST6CDT" [note: '''CST6CDT''']
  "Canada/Atlantic" [note: '''Canada/Atlantic''']
  "Canada/Central" [note: '''Canada/Central''']
  "Canada/Eastern" [note: '''Canada/Eastern''']
  "Canada/Mountain" [note: '''Canada/Mountain''']
  "Canada/Newfoundland" [note: '''Canada/Newfoundland''']
  "Canada/Pacific" [note: '''Canada/Pacific''']
  "Canada/Saskatchewan" [note: '''Canada/Saskatchewan''']
  "Canada/Yukon" [note: '''Canada/Yukon''']
  "Chile/Continental" [note: '''Chile/Continental''']
  "Chile/EasterIsland" [note: '''Chile/EasterIsland''']
  "Cuba" [note: '''Cuba''']
  "EET" [note: '''EET''']
  "EST" [note: '''EST''']
  "EST5EDT" [note: '''EST5EDT''']
  "Egypt" [note: '''Egypt''']
  "Eire" [note: '''Eire''']
  "Etc/GMT" [note: '''Etc/GMT''']
  "Etc/GMT-0" [note: '''Etc/GMT-0''']
  "Etc/GMT-1" [note: '''Etc/GMT-1''']
  "Etc/GMT-10" [note: '''Etc/GMT-10''']
  "Etc/GMT-11" [note: '''Etc/GMT-11''']
  "Etc/GMT-12" [note: '''Etc/GMT-12''']
  "Etc/GMT-13" [note: '''Etc/GMT-13''']
  "Etc/GMT-14" [note: '''Etc/GMT-14''']
  "Etc/GMT-2" [note: '''Etc/GMT-2''']
  "Etc/GMT-3" [note: '''Etc/GMT-3''']
  "Etc/GMT-4" [note: '''Etc/GMT-4''']
  "Etc/GMT-5" [note: '''Etc/GMT-5''']
  "Etc/GMT-6" [note: '''Etc/GMT-6''']
  "Etc/GMT-7" [note: '''Etc/GMT-7''']
  "Etc/GMT-8" [note: '''Etc/GMT-8''']
  "Etc/GMT-9" [note: '''Etc/GMT-9''']
  "Etc/GMT+0" [note: '''Etc/GMT+0''']
  "Etc/GMT+1" [note: '''Etc/GMT+1''']
  "Etc/GMT+10" [note: '''Etc/GMT+10''']
  "Etc/GMT+11" [note: '''Etc/GMT+11''']
  "Etc/GMT+12" [note: '''Etc/GMT+12''']
  "Etc/GMT+2" [note: '''Etc/GMT+2''']
  "Etc/GMT+3" [note: '''Etc/GMT+3''']
  "Etc/GMT+4" [note: '''Etc/GMT+4''']
  "Etc/GMT+5" [note: '''Etc/GMT+5''']
  "Etc/GMT+6" [note: '''Etc/GMT+6''']
  "Etc/GMT+7" [note: '''Etc/GMT+7''']
  "Etc/GMT+8" [note: '''Etc/GMT+8''']
  "Etc/GMT+9" [note: '''Etc/GMT+9''']
  "Etc/GMT0" [note: '''Etc/GMT0''']
  "Etc/Greenwich" [note: '''Etc/Greenwich''']
  "Etc/UCT" [note: '''Etc/UCT''']
  "Etc/UTC" [note: '''Etc/UTC''']
  "Etc/Universal" [note: '''Etc/Universal''']
  "Etc/Zulu" [note: '''Etc/Zulu''']
  "Europe/Amsterdam" [note: '''Europe/Amsterdam''']
  "Europe/Andorra" [note: '''Europe/Andorra''']
  "Europe/Astrakhan" [note: '''Europe/Astrakhan''']
  "Europe/Athens" [note: '''Europe/Athens''']
  "Europe/Belfast" [note: '''Europe/Belfast''']
  "Europe/Belgrade" [note: '''Europe/Belgrade''']
  "Europe/Berlin" [note: '''Europe/Berlin''']
  "Europe/Bratislava" [note: '''Europe/Bratislava''']
  "Europe/Brussels" [note: '''Europe/Brussels''']
  "Europe/Bucharest" [note: '''Europe/Bucharest''']
  "Europe/Budapest" [note: '''Europe/Budapest''']
  "Europe/Busingen" [note: '''Europe/Busingen''']
  "Europe/Chisinau" [note: '''Europe/Chisinau''']
  "Europe/Copenhagen" [note: '''Europe/Copenhagen''']
  "Europe/Dublin" [note: '''Europe/Dublin''']
  "Europe/Gibraltar" [note: '''Europe/Gibraltar''']
  "Europe/Guernsey" [note: '''Europe/Guernsey''']
  "Europe/Helsinki" [note: '''Europe/Helsinki''']
  "Europe/Isle_of_Man" [note: '''Europe/Isle of Man''']
  "Europe/Istanbul" [note: '''Europe/Istanbul''']
  "Europe/Jersey" [note: '''Europe/Jersey''']
  "Europe/Kaliningrad" [note: '''Europe/Kaliningrad''']
  "Europe/Kiev" [note: '''Europe/Kiev''']
  "Europe/Kirov" [note: '''Europe/Kirov''']
  "Europe/Kyiv" [note: '''Europe/Kyiv''']
  "Europe/Lisbon" [note: '''Europe/Lisbon''']
  "Europe/Ljubljana" [note: '''Europe/Ljubljana''']
  "Europe/London" [note: '''Europe/London''']
  "Europe/Luxembourg" [note: '''Europe/Luxembourg''']
  "Europe/Madrid" [note: '''Europe/Madrid''']
  "Europe/Malta" [note: '''Europe/Malta''']
  "Europe/Mariehamn" [note: '''Europe/Mariehamn''']
  "Europe/Minsk" [note: '''Europe/Minsk''']
  "Europe/Monaco" [note: '''Europe/Monaco''']
  "Europe/Moscow" [note: '''Europe/Moscow''']
  "Europe/Nicosia" [note: '''Europe/Nicosia''']
  "Europe/Oslo" [note: '''Europe/Oslo''']
  "Europe/Paris" [note: '''Europe/Paris''']
  "Europe/Podgorica" [note: '''Europe/Podgorica''']
  "Europe/Prague" [note: '''Europe/Prague''']
  "Europe/Riga" [note: '''Europe/Riga''']
  "Europe/Rome" [note: '''Europe/Rome''']
  "Europe/Samara" [note: '''Europe/Samara''']
  "Europe/San_Marino" [note: '''Europe/San Marino''']
  "Europe/Sarajevo" [note: '''Europe/Sarajevo''']
  "Europe/Saratov" [note: '''Europe/Saratov''']
  "Europe/Simferopol" [note: '''Europe/Simferopol''']
  "Europe/Skopje" [note: '''Europe/Skopje''']
  "Europe/Sofia" [note: '''Europe/Sofia''']
  "Europe/Stockholm" [note: '''Europe/Stockholm''']
  "Europe/Tallinn" [note: '''Europe/Tallinn''']
  "Europe/Tirane" [note: '''Europe/Tirane''']
  "Europe/Tiraspol" [note: '''Europe/Tiraspol''']
  "Europe/Ulyanovsk" [note: '''Europe/Ulyanovsk''']
  "Europe/Uzhgorod" [note: '''Europe/Uzhgorod''']
  "Europe/Vaduz" [note: '''Europe/Vaduz''']
  "Europe/Vatican" [note: '''Europe/Vatican''']
  "Europe/Vienna" [note: '''Europe/Vienna''']
  "Europe/Vilnius" [note: '''Europe/Vilnius''']
  "Europe/Volgograd" [note: '''Europe/Volgograd''']
  "Europe/Warsaw" [note: '''Europe/Warsaw''']
  "Europe/Zagreb" [note: '''Europe/Zagreb''']
  "Europe/Zaporozhye" [note: '''Europe/Zaporozhye''']
  "Europe/Zurich" [note: '''Europe/Zurich''']
  "GB" [note: '''GB''']
  "GB-Eire" [note: '''GB-Eire''']
  "GMT" [note: '''GMT''']
  "GMT-0" [note: '''GMT-0''']
  "GMT+0" [note: '''GMT+0''']
  "GMT0" [note: '''GMT0''']
  "Greenwich" [note: '''Greenwich''']
  "HST" [note: '''HST''']
  "Hongkong" [note: '''Hongkong''']
  "Iceland" [note: '''Iceland''']
  "Indian/Antananarivo" [note: '''Indian/Antananarivo''']
  "Indian/Chagos" [note: '''Indian/Chagos''']
  "Indian/Christmas" [note: '''Indian/Christmas''']
  "Indian/Cocos" [note: '''Indian/Cocos''']
  "Indian/Comoro" [note: '''Indian/Comoro''']
  "Indian/Kerguelen" [note: '''Indian/Kerguelen''']
  "Indian/Mahe" [note: '''Indian/Mahe''']
  "Indian/Maldives" [note: '''Indian/Maldives''']
  "Indian/Mauritius" [note: '''Indian/Mauritius''']
  "Indian/Mayotte" [note: '''Indian/Mayotte''']
  "Indian/Reunion" [note: '''Indian/Reunion''']
  "Iran" [note: '''Iran''']
  "Israel" [note: '''Israel''']
  "Jamaica" [note: '''Jamaica''']
  "Japan" [note: '''Japan''']
  "Kwajalein" [note: '''Kwajalein''']
  "Libya" [note: '''Libya''']
  "MET" [note: '''MET''']
  "MST" [note: '''MST''']
  "MST7MDT" [note: '''MST7MDT''']
  "Mexico/BajaNorte" [note: '''Mexico/BajaNorte''']
  "Mexico/BajaSur" [note: '''Mexico/BajaSur''']
  "Mexico/General" [note: '''Mexico/General''']
  "NZ" [note: '''NZ''']
  "NZ-CHAT" [note: '''NZ-CHAT''']
  "Navajo" [note: '''Navajo''']
  "PRC" [note: '''PRC''']
  "PST8PDT" [note: '''PST8PDT''']
  "Pacific/Apia" [note: '''Pacific/Apia''']
  "Pacific/Auckland" [note: '''Pacific/Auckland''']
  "Pacific/Bougainville" [note: '''Pacific/Bougainville''']
  "Pacific/Chatham" [note: '''Pacific/Chatham''']
  "Pacific/Chuuk" [note: '''Pacific/Chuuk''']
  "Pacific/Easter" [note: '''Pacific/Easter''']
  "Pacific/Efate" [note: '''Pacific/Efate''']
  "Pacific/Enderbury" [note: '''Pacific/Enderbury''']
  "Pacific/Fakaofo" [note: '''Pacific/Fakaofo''']
  "Pacific/Fiji" [note: '''Pacific/Fiji''']
  "Pacific/Funafuti" [note: '''Pacific/Funafuti''']
  "Pacific/Galapagos" [note: '''Pacific/Galapagos''']
  "Pacific/Gambier" [note: '''Pacific/Gambier''']
  "Pacific/Guadalcanal" [note: '''Pacific/Guadalcanal''']
  "Pacific/Guam" [note: '''Pacific/Guam''']
  "Pacific/Honolulu" [note: '''Pacific/Honolulu''']
  "Pacific/Johnston" [note: '''Pacific/Johnston''']
  "Pacific/Kanton" [note: '''Pacific/Kanton''']
  "Pacific/Kiritimati" [note: '''Pacific/Kiritimati''']
  "Pacific/Kosrae" [note: '''Pacific/Kosrae''']
  "Pacific/Kwajalein" [note: '''Pacific/Kwajalein''']
  "Pacific/Majuro" [note: '''Pacific/Majuro''']
  "Pacific/Marquesas" [note: '''Pacific/Marquesas''']
  "Pacific/Midway" [note: '''Pacific/Midway''']
  "Pacific/Nauru" [note: '''Pacific/Nauru''']
  "Pacific/Niue" [note: '''Pacific/Niue''']
  "Pacific/Norfolk" [note: '''Pacific/Norfolk''']
  "Pacific/Noumea" [note: '''Pacific/Noumea''']
  "Pacific/Pago_Pago" [note: '''Pacific/Pago Pago''']
  "Pacific/Palau" [note: '''Pacific/Palau''']
  "Pacific/Pitcairn" [note: '''Pacific/Pitcairn''']
  "Pacific/Pohnpei" [note: '''Pacific/Pohnpei''']
  "Pacific/Ponape" [note: '''Pacific/Ponape''']
  "Pacific/Port_Moresby" [note: '''Pacific/Port Moresby''']
  "Pacific/Rarotonga" [note: '''Pacific/Rarotonga''']
  "Pacific/Saipan" [note: '''Pacific/Saipan''']
  "Pacific/Samoa" [note: '''Pacific/Samoa''']
  "Pacific/Tahiti" [note: '''Pacific/Tahiti''']
  "Pacific/Tarawa" [note: '''Pacific/Tarawa''']
  "Pacific/Tongatapu" [note: '''Pacific/Tongatapu''']
  "Pacific/Truk" [note: '''Pacific/Truk''']
  "Pacific/Wake" [note: '''Pacific/Wake''']
  "Pacific/Wallis" [note: '''Pacific/Wallis''']
  "Pacific/Yap" [note: '''Pacific/Yap''']
  "Poland" [note: '''Poland''']
  "Portugal" [note: '''Portugal''']
  "ROC" [note: '''ROC''']
  "ROK" [note: '''ROK''']
  "Singapore" [note: '''Singapore''']
  "Turkey" [note: '''Turkey''']
  "UCT" [note: '''UCT''']
  "US/Alaska" [note: '''US/Alaska''']
  "US/Aleutian" [note: '''US/Aleutian''']
  "US/Arizona" [note: '''US/Arizona''']
  "US/Central" [note: '''US/Central''']
  "US/East-Indiana" [note: '''US/East-Indiana''']
  "US/Eastern" [note: '''US/Eastern''']
  "US/Hawaii" [note: '''US/Hawaii''']
  "US/Indiana-Starke" [note: '''US/Indiana-Starke''']
  "US/Michigan" [note: '''US/Michigan''']
  "US/Mountain" [note: '''US/Mountain''']
  "US/Pacific" [note: '''US/Pacific''']
  "US/Samoa" [note: '''US/Samoa''']
  "UTC" [note: '''UTC''']
  "Universal" [note: '''Universal''']
  "W-SU" [note: '''W-SU''']
  "WET" [note: '''WET''']
  "Zulu" [note: '''Zulu''']
  "localtime" [note: '''localtime''']
}

Table formula_one.BaseTeam {
  Note: '''
Underlying Team ignoring rebrands

*DB table: formula_one_baseteam*'''

  id big_auto [pk, unique, not null]
  api_id char [unique, not null]
  name char [unique, null]

  indexes {
    (api_id) [unique, name: 'formula_one_baseteam_api_id_key', type: btree]
    (name) [unique, name: 'formula_one_baseteam_name_key', type: btree]
    (id) [pk, unique, name: 'formula_one_baseteam_pkey', type: btree]
  }
}


Table formula_one.ChampionshipAdjustment {
  Note: '''
Adjustments such as Disqualifications and Exclusions from Driver/Team Championships

*DB table: formula_one_championshipadjustment*'''

  id big_auto [pk, unique, not null]
  season_id foreign_key [not null]
  driver_id foreign_key [null]
  team_id foreign_key [null]
  api_id char [unique, not null]
  adjustment formula_one.positive_small_integer_championshipadjustment_adjustment [not null]
  points float [note: '''Points to deduct if POINT_DEDUCTION adjustment, otherwise null''', null]

  indexes {
    (api_id) [unique, name: 'formula_one_championshipadjustment_api_id_key', type: btree]
    (driver_id) [name: 'formula_one_championshipadjustment_driver_id_a300173e', type: btree]
    (id) [pk, unique, name: 'formula_one_championshipadjustment_pkey', type: btree]
    (season_id) [name: 'formula_one_championshipadjustment_season_id_418f4f25', type: btree]
    (team_id) [name: 'formula_one_championshipadjustment_team_id_8022a7e8', type: btree]
  }
}
ref: formula_one.ChampionshipAdjustment.season_id > formula_one.Season.id
ref: formula_one.ChampionshipAdjustment.driver_id > formula_one.Driver.id
ref: formula_one.ChampionshipAdjustment.team_id > formula_one.Team.id


Table formula_one.ChampionshipSystem {
  Note: '''
Drivers and Team Championship score calculation rules

*DB table: formula_one_championshipsystem*'''

  id big_auto [pk, unique, not null]
  api_id char [unique, not null]
  reference char [unique, null]
  name char [null]
  eligibility formula_one.positive_small_integer_championshipsystem_eligibility [not null]
  driver_season_split formula_one.positive_small_integer_championshipsystem_driver_season_split [not null]
  driver_best_results formula_one.small_integer_championshipsystem_driver_best_results [not null]
  team_season_split formula_one.positive_small_integer_championshipsystem_team_season_split [not null]
  team_best_results formula_one.small_integer_championshipsystem_team_best_results [not null]
  team_points_per_session formula_one.positive_small_integer_championshipsystem_team_points_per_session [not null]

  indexes {
    (api_id) [unique, name: 'formula_one_championshipsystem_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_championshipsystem_pkey', type: btree]
    (reference) [unique, name: 'formula_one_championshipsystem_reference_key', type: btree]
  }
}


Table formula_one.Circuit {
  Note: '''
Round venue information

*DB table: formula_one_circuit*'''

  id big_auto [pk, unique, not null]
  api_id char [unique, not null]
  reference char [unique, null]
  name char [not null]
  locality char [null]
  country char [null]
  country_code char [null]
  latitude float [null]
  longitude float [null]
  altitude float [null]
  wikipedia url [null]

  indexes {
    (api_id) [unique, name: 'formula_one_circuit_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_circuit_pkey', type: btree]
    (reference) [unique, name: 'formula_one_circuit_reference_key', type: btree]
  }
}


Table formula_one.Driver {
  Note: '''
Session Participant / Racing Driver Information

May track reserve drivers with no sessions, or junior drivers only taking part in practice sessions.

*DB table: formula_one_driver*'''

  id big_auto [pk, unique, not null]
  api_id char [unique, not null]
  reference char [unique, null]
  forename char [not null]
  surname char [not null]
  abbreviation char [null]
  nationality char [null]
  country_code char [null]
  permanent_car_number positive_small_integer [null]
  date_of_birth date [null]
  wikipedia url [null]

  indexes {
    (api_id) [unique, name: 'formula_one_driver_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_driver_pkey', type: btree]
    (reference) [unique, name: 'formula_one_driver_reference_key', type: btree]
  }
}


Table formula_one.DriverChampionship {
  Note: '''
DriverChampionship(id, session, driver, year, round_number, session_number, position, points, win_count, highest_finish, is_eligible, adjustment_type, season, round)

*DB table: formula_one_driverchampionship*'''

  id big_auto [pk, unique, not null]
  session_id foreign_key [not null]
  driver_id foreign_key [not null]
  year small_integer [not null]
  round_number positive_small_integer [not null]
  session_number positive_small_integer [not null]
  position small_integer [null]
  points float [not null]
  win_count small_integer [not null]
  highest_finish small_integer [null]
  is_eligible boolean [default:`False`, not null]
  adjustment_type formula_one.positive_small_integer_driverchampionship_adjustment_type [default:`0`, not null]
  season_id foreign_key [null]
  round_id foreign_key [null]

  indexes {
    (driver_id) [name: 'formula_one_driverchampionship_driver_id_cdc02d56', type: btree]
    (id) [pk, unique, name: 'formula_one_driverchampionship_pkey', type: btree]
    (round_id) [name: 'formula_one_driverchampionship_round_id_1482ea73', type: btree]
    (season_id) [name: 'formula_one_driverchampionship_season_id_1d54932c', type: btree]
    (session_id) [name: 'formula_one_driverchampionship_session_id_48881ced', type: btree]
  }
}
ref: formula_one.DriverChampionship.session_id > formula_one.Session.id
ref: formula_one.DriverChampionship.driver_id > formula_one.Driver.id
ref: formula_one.DriverChampionship.season_id > formula_one.Season.id
ref: formula_one.DriverChampionship.round_id > formula_one.Round.id


Table formula_one.Lap {
  Note: '''
Information on a driven Lap of Race, Qualifying, or any other session for a driver

*DB table: formula_one_lap*'''

  id big_auto [pk, unique, not null]
  session_entry_id foreign_key [not null]
  api_id char [unique, not null]
  number positive_small_integer [null]
  position positive_small_integer [null]
  time duration [null]
  average_speed float [null]
  is_entry_fastest_lap boolean [default:`False`, not null]
  is_deleted boolean [default:`False`, not null]

  indexes {
    (api_id) [unique, name: 'formula_one_lap_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_lap_pkey', type: btree]
    (session_entry_id) [name: 'formula_one_lap_session_entry_id_45d272fb', type: btree]
  }
}
ref: formula_one.Lap.session_entry_id > formula_one.SessionEntry.id


Table formula_one.Penalty {
  Note: '''
Penalty given/served in an entry's session

*DB table: formula_one_penalty*'''

  id big_auto [pk, unique, not null]
  earned_id foreign_key [null]
  served_id foreign_key [null]
  api_id char [unique, not null]
  license_points positive_small_integer [null]
  position positive_small_integer [null]
  time duration [null]
  is_time_served_in_pit boolean [null]

  indexes {
    (api_id) [unique, name: 'formula_one_penalty_api_id_key', type: btree]
    (earned_id) [name: 'formula_one_penalty_earned_id_2ea56f51', type: btree]
    (id) [pk, unique, name: 'formula_one_penalty_pkey', type: btree]
    (served_id) [name: 'formula_one_penalty_served_id_0a0943aa', type: btree]
  }
}
ref: formula_one.Penalty.earned_id > formula_one.SessionEntry.id
ref: formula_one.Penalty.served_id > formula_one.SessionEntry.id


Table formula_one.PitStop {
  Note: '''
Pit Stop information for a session

*DB table: formula_one_pitstop*'''

  id big_auto [pk, unique, not null]
  session_entry_id foreign_key [not null]
  lap_id one_to_one [unique, null]
  api_id char [unique, not null]
  number positive_small_integer [null]
  duration duration [null]
  local_timestamp char [null]

  indexes {
    (api_id) [unique, name: 'formula_one_pitstop_api_id_key', type: btree]
    (lap_id) [unique, name: 'formula_one_pitstop_lap_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_pitstop_pkey', type: btree]
    (session_entry_id) [name: 'formula_one_pitstop_session_entry_id_95aaa474', type: btree]
  }
}
ref: formula_one.PitStop.session_entry_id > formula_one.SessionEntry.id
ref: formula_one.PitStop.lap_id - formula_one.Lap.id


Table formula_one.PointSystem {
  Note: '''
Session point calculation rules

*DB table: formula_one_pointsystem*'''

  id big_auto [pk, unique, not null]
  api_id char [unique, not null]
  reference char [unique, null]
  name char [null]
  driver_position_points formula_one.positive_small_integer_pointsystem_driver_position_points [not null]
  driver_fastest_lap formula_one.positive_small_integer_pointsystem_driver_fastest_lap [default:`0`, not null]
  team_position_points formula_one.positive_small_integer_pointsystem_team_position_points [not null]
  team_fastest_lap formula_one.positive_small_integer_pointsystem_team_fastest_lap [default:`0`, not null]
  partial formula_one.positive_small_integer_pointsystem_partial [default:`0`, not null]
  shared_drive formula_one.positive_small_integer_pointsystem_shared_drive [default:`0`, not null]
  is_double_points boolean [default:`False`, not null]

  indexes {
    (api_id) [unique, name: 'formula_one_pointsystem_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_pointsystem_pkey', type: btree]
    (reference) [unique, name: 'formula_one_pointsystem_reference_key', type: btree]
  }
}


Table formula_one.Round {
  Note: '''
Race event information relevent to all sessions

*DB table: formula_one_round*'''

  id big_auto [pk, unique, not null]
  season_id foreign_key [not null]
  circuit_id foreign_key [not null]
  api_id char [unique, not null]
  number positive_small_integer [null]
  name char [null]
  date date [null]
  race_number positive_small_integer [null]
  wikipedia url [null]
  is_cancelled boolean [default:`False`, not null]

  indexes {
    (api_id) [unique, name: 'formula_one_round_api_id_key', type: btree]
    (circuit_id) [name: 'formula_one_round_circuit_id_5f8354aa', type: btree]
    (id) [pk, unique, name: 'formula_one_round_pkey', type: btree]
    (season_id) [name: 'formula_one_round_season_id_b197d05c', type: btree]
  }
}
ref: formula_one.Round.season_id > formula_one.Season.id
ref: formula_one.Round.circuit_id > formula_one.Circuit.id


Table formula_one.RoundEntry {
  Note: '''
All data relating to a driver racing for a specific team for a race

*DB table: formula_one_roundentry*'''

  id big_auto [pk, unique, not null]
  round_id foreign_key [not null]
  team_driver_id foreign_key [not null]
  api_id char [unique, not null]
  car_number positive_small_integer [null]

  indexes {
    (api_id) [unique, name: 'formula_one_roundentry_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_roundentry_pkey', type: btree]
    (round_id) [name: 'formula_one_roundentry_round_id_87a13ce6', type: btree]
    (team_driver_id) [name: 'formula_one_roundentry_team_driver_id_a4e49e05', type: btree]
  }
}
ref: formula_one.RoundEntry.round_id > formula_one.Round.id
ref: formula_one.RoundEntry.team_driver_id > formula_one.TeamDriver.id


Table formula_one.Season {
  Note: '''
Formula 1 Championship season

*DB table: formula_one_season*'''

  id big_auto [pk, unique, not null]
  championship_system_id foreign_key [null]
  api_id char [unique, not null]
  year small_integer [unique, not null]
  wikipedia url [null]

  indexes {
    (api_id) [unique, name: 'formula_one_season_api_id_key', type: btree]
    (championship_system_id) [name: 'formula_one_season_championship_system_id_2771fd08', type: btree]
    (id) [pk, unique, name: 'formula_one_season_pkey', type: btree]
    (year) [unique, name: 'formula_one_season_year_key', type: btree]
  }
}
ref: formula_one.Season.championship_system_id > formula_one.ChampionshipSystem.id


Table formula_one.Session {
  Note: '''
Information about a scheduled session where cars are on track

*DB table: formula_one_session*'''

  id big_auto [pk, unique, not null]
  round_id foreign_key [not null]
  number positive_small_integer [null]
  point_system_id foreign_key [default:`1`, not null]
  api_id char [unique, not null]
  type formula_one.char_session_type [not null]
  timestamp date_time [note: '''UTC datetime of the session start. If time is unknown, uses midnight (00:00:00 UTC).''', null]
  has_time_data boolean [note: '''Indicates whether the timestamp includes actual time data or just date with default midnight time.''', default:`False`, not null]
  timezone formula_one.time_zone_session_timezone [note: '''IANA timezone identifier for the session location (e.g., "Europe/Monaco", "Asia/Singapore").''', null]
  scheduled_laps positive_small_integer [null]
  is_cancelled boolean [default:`False`, not null]

  indexes {
    (api_id) [unique, name: 'formula_one_session_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_session_pkey', type: btree]
    (point_system_id) [name: 'formula_one_session_point_system_id_d3f43f32', type: btree]
    (round_id) [name: 'formula_one_session_round_id_d4c74dba', type: btree]
  }
}
ref: formula_one.Session.round_id > formula_one.Round.id
ref: formula_one.Session.point_system_id > formula_one.PointSystem.id


Table formula_one.SessionEntry {
  Note: '''
All information for a round entry for the session

*DB table: formula_one_sessionentry*'''

  id big_auto [pk, unique, not null]
  session_id foreign_key [not null]
  round_entry_id foreign_key [not null]
  api_id char [unique, not null]
  position positive_small_integer [null]
  is_classified boolean [null]
  status formula_one.positive_small_integer_sessionentry_status [null]
  detail char [null]
  points float [null]
  is_eligible_for_points boolean [default:`True`, not null]
  grid positive_small_integer [null]
  time duration [null]
  fastest_lap_rank positive_small_integer [null]
  laps_completed positive_small_integer [null]

  indexes {
    (api_id) [unique, name: 'formula_one_sessionentry_api_id_key', type: btree]
    (id) [pk, unique, name: 'formula_one_sessionentry_pkey', type: btree]
    (round_entry_id) [name: 'formula_one_sessionentry_round_entry_id_c705dd79', type: btree]
    (session_id) [name: 'formula_one_sessionentry_session_id_b63e00dd', type: btree]
  }
}
ref: formula_one.SessionEntry.session_id > formula_one.Session.id
ref: formula_one.SessionEntry.round_entry_id > formula_one.RoundEntry.id


Table formula_one.Team {
  Note: '''
Information about a Constructor / Team

*DB table: formula_one_team*'''

  id big_auto [pk, unique, not null]
  base_team_id foreign_key [null]
  api_id char [unique, not null]
  reference char [unique, null]
  name char [not null]
  nationality char [null]
  country_code char [null]
  wikipedia url [null]

  indexes {
    (api_id) [unique, name: 'formula_one_team_api_id_key', type: btree]
    (base_team_id) [name: 'formula_one_team_base_team_id_f9b8afd4', type: btree]
    (id) [pk, unique, name: 'formula_one_team_pkey', type: btree]
    (reference) [unique, name: 'formula_one_team_reference_key', type: btree]
  }
}
ref: formula_one.Team.base_team_id > formula_one.BaseTeam.id


Table formula_one.TeamChampionship {
  Note: '''
TeamChampionship(id, session, team, year, round_number, session_number, position, points, win_count, highest_finish, is_eligible, adjustment_type, season, round)

*DB table: formula_one_teamchampionship*'''

  id big_auto [pk, unique, not null]
  session_id foreign_key [not null]
  team_id foreign_key [not null]
  year small_integer [not null]
  round_number positive_small_integer [not null]
  session_number positive_small_integer [not null]
  position small_integer [null]
  points float [not null]
  win_count small_integer [not null]
  highest_finish small_integer [null]
  is_eligible boolean [default:`False`, not null]
  adjustment_type formula_one.positive_small_integer_teamchampionship_adjustment_type [default:`0`, not null]
  season_id foreign_key [null]
  round_id foreign_key [null]

  indexes {
    (id) [pk, unique, name: 'formula_one_teamchampionship_pkey', type: btree]
    (round_id) [name: 'formula_one_teamchampionship_round_id_9254663c', type: btree]
    (season_id) [name: 'formula_one_teamchampionship_season_id_40bacf68', type: btree]
    (session_id) [name: 'formula_one_teamchampionship_session_id_ca215e52', type: btree]
    (team_id) [name: 'formula_one_teamchampionship_team_id_6ae4b052', type: btree]
  }
}
ref: formula_one.TeamChampionship.session_id > formula_one.Session.id
ref: formula_one.TeamChampionship.team_id > formula_one.Team.id
ref: formula_one.TeamChampionship.season_id > formula_one.Season.id
ref: formula_one.TeamChampionship.round_id > formula_one.Round.id


Table formula_one.TeamDriver {
  Note: '''
Membership of a Driver to a Team for a given season

*DB table: formula_one_teamdriver*'''

  id big_auto [pk, unique, not null]
  team_id foreign_key [not null]
  driver_id foreign_key [not null]
  season_id foreign_key [not null]
  api_id char [unique, not null]
  role formula_one.positive_small_integer_teamdriver_role [null]

  indexes {
    (api_id) [unique, name: 'formula_one_teamdriver_api_id_key', type: btree]
    (driver_id) [name: 'formula_one_teamdriver_driver_id_ce31f35f', type: btree]
    (id) [pk, unique, name: 'formula_one_teamdriver_pkey', type: btree]
    (season_id) [name: 'formula_one_teamdriver_season_id_1938a454', type: btree]
    (team_id) [name: 'formula_one_teamdriver_team_id_68db5d6f', type: btree]
  }
}
ref: formula_one.TeamDriver.team_id > formula_one.Team.id
ref: formula_one.TeamDriver.driver_id > formula_one.Driver.id
ref: formula_one.TeamDriver.season_id > formula_one.Season.id

